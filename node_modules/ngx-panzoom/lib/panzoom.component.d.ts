import { OnInit, AfterViewInit, OnDestroy, NgZone } from '@angular/core';
import { PanZoomConfig } from './panzoom-config';
import * as i0 from "@angular/core";
export declare class PanZoomComponent implements OnInit, AfterViewInit, OnDestroy {
    private zone;
    constructor(zone: NgZone);
    private frameElementRef;
    private panElementRef;
    private zoomElementRef;
    private panzoomOverlayRef;
    config: PanZoomConfig;
    private base;
    private model;
    private api;
    private contentHeight;
    private contentWidth;
    private frameHeight;
    private frameWidth;
    private lastMouseEventTime;
    private previousPosition;
    private isDragging;
    private panVelocity;
    private animationParams;
    private animationFrameFunc;
    private lastTick;
    private isChrome;
    private willChangeNextFrame;
    private animationId;
    private isMobile;
    private scale;
    private isFirstSync;
    private lastClickPoint;
    private zoomLevelIsChanging;
    private dragFinishing;
    private dragMouseButton;
    private maxScale;
    private minScale;
    private minimumAllowedZoomLevel;
    private resizeObserver;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    private onMouseWheel;
    /**
     * Method will check if 'child' node element is a child of
     * parent node with class 'className'
     * @param className
     * @param child
     */
    private isParentElement;
    private onMousedown;
    private onTouchStart;
    private onMouseMove;
    private onTouchMove;
    private onMouseUp;
    private onTouchEnd;
    private onDblClick;
    private preventDefault;
    private animationTick;
    private updateDOM;
    private freeZoom;
    private isMobileDevice;
    private syncBaseToModel;
    private length;
    private getCentrePoint;
    private getCssScale;
    private getZoomLevel;
    private calcZoomToFit;
    private zoomToFitModel;
    private zoomToLevelAndPoint;
    private zoomIn;
    private zoomOut;
    private startAnimation;
    private getFrameElementOffset;
    private onContentDimensionsChangeDetected;
    private getViewPosition;
    private getModelPosition;
    private resetView;
    private zoomToFit;
    private zoomInToPoint;
    private zoomOutFromPoint;
    private panToPoint;
    private panToPointCurrentScale;
    private panDelta;
    private panDeltaAbsolute;
    private panDeltaPercent;
    private centerContent;
    private centerX;
    private centerY;
    private centerTopLeftCorner;
    private centerBottomLeftCorner;
    private centerTopRightCorner;
    private centerBottomRightCorner;
    private updateContentDimensions;
    private detectContentDimensions;
    private animateToTarget;
    private changeZoomLevel;
    static ɵfac: i0.ɵɵFactoryDeclaration<PanZoomComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PanZoomComponent, "pan-zoom", never, { "config": "config"; }, {}, never, ["*"]>;
}
